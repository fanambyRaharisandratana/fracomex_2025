import Config

# Configure your database
config :fracomex, Fracomex.Repo,
  username: "postgres",
  password: "Mgbi@261!",
  hostname: "localhost",
  database: "fracomex",
  port: 5433,
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

config :fracomex, Fracomex.EbpRepo,
  username: "sa",
  password: "@ebp78EBP",
  database: "FRACOMEX_0895452f-b7c1-4c00-a316-c6a6d0ea4bf4",
  # instance: "EBP_2017",
  # stacktrace: true,
  # show_sensitive_data_on_connection_error: true,
  # pool_size: 10
  hostname: "51.75.181.188",
  timeout: 45_000,
  odbc_driver: "{SQL Server Native Client 11.0}",
  pool_size: String.to_integer(System.get_env("POOL_SIZE") || "10")

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
config :fracomex, FracomexWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {0, 0, 0, 0}, port: 4022],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "a47qN/Cgy6ikhBek4f55bQWq42gjbWE30sVVx2PgLzbsn9IYlFXUrq9/HL0Dq9r8",
  watchers: [
    # Start the esbuild watcher by calling Esbuild.install_and_run(:default, args)
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch --loader:.woff=file --loader:.eot=file --loader:.woff2=file --loader:.svg=file --loader:.ttf=file)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :fracomex, FracomexWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/fracomex_web/(live|views)/.*(ex)$",
      ~r"lib/fracomex_web/templates/.*(eex)$"
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

config :logger,
  backends: [{LoggerFileBackend, :combined_log}]

# Configuration du backend pour un fichier de log unique
config :logger, :combined_log,
  path: "/var/log/elixir/fracomex.log",
  level: :debug,  # Capturera les messages de niveau :info et plus (y compris :warn et :error)
  format: "$date $time $metadata[$level] $message\n",  # Format personnalisé des logs
  metadata: [:request_id]  # Métadonnées supplémentaires si nécessaire

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
